<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login*" access="permitAll"/>
        <intercept-url pattern="/profile*" access="isAuthenticated() and hasRole('USER')"/>
        <intercept-url pattern="/admin*" access="isAuthenticated() and hasAnyRole('SUPERADMIN','ADMIN')"/>
        <access-denied-handler error-page="/error"/>


        <form-login
                login-page="/login"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password"/>
        <logout logout-success-url="/login?logout"/>

        <remember-me/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service id="userService"
                               data-source-ref="dataSource"
                               users-by-username-query=
                                       "select customerName, password, enabled from customer where customerName=?"
                               authorities-by-username-query=
                                       "select c.customerName, r.role from role r, customer c where  c.roleId = r.roleId AND customerName =?"/>
            <!--<password-encoder hash="md5"/>-->
        </authentication-provider>
    </authentication-manager>
    <global-method-security secured-annotations="enabled"/>
</beans:beans>
